---
import UseCase from "../UseCase.astro"
import code from "./snippets/feedback.txt?raw"
import { Code } from "astro-expressive-code/components"
---

<UseCase class='hidden' tab='feedback'>
  <div slot='example'>
    <div class='space-y-5 py-2'>
      <nav class='flex' aria-label='Breadcrumb'>
        <ol role='list' class='flex items-center space-x-2'>
          <li>
            <div>
              <a
                href='#use-cases'
                class='ml-2 text-sm text-astro-gray-300 hover:text-astro-gray-200'
                >Home</a
              >
            </div>
          </li>

          <li>
            <div class='flex items-center'>
              <svg
                class='h-5 w-5 flex-shrink-0 text-gray-300'
                xmlns='http://www.w3.org/2000/svg'
                fill='currentColor'
                viewBox='0 0 20 20'
                aria-hidden='true'
              >
                <path d='M5.555 17.776l8-16 .894.448-8 16-.894-.448z'></path>
              </svg>
              <a
                href='#use-cases'
                class='ml-2 text-sm text-astro-gray-300 hover:text-astro-gray-200'
                >Articles</a
              >
            </div>
          </li>

          <li>
            <div class='flex items-center'>
              <svg
                class='h-5 w-5 flex-shrink-0 text-gray-300'
                xmlns='http://www.w3.org/2000/svg'
                fill='currentColor'
                viewBox='0 0 20 20'
                aria-hidden='true'
              >
                <path d='M5.555 17.776l8-16 .894.448-8 16-.894-.448z'></path>
              </svg>
              <a href='#use-cases' class='ml-2 text-sm text-astro-gray-400'
                >Astro DB: A Deep Dive</a
              >
            </div>
          </li>
        </ol>
      </nav>

      <h3 class='text-xl text-[#9FA5B3]'>Astro DB: A Deep Dive</h3>

      <div class='space-y-4 text-balance text-base text-[#6E7584]'>
        <p>
          Astro DB brings together the web framework, the schema, the seed file,
          and the database itself all into a single cohesive story. We even
          include an ORM for you: Drizzle. We selected Drizzle because it is a
          type-safe ORM that lets you get as close to the metal as you want, and
          is also pluggable which allowed us to add our own behavior on top.
        </p>

        <p>
          Astro DB includes a hosted libSQL database that you can connect to
          during local development and in production. Everything is managed for
          you through our Astro Studio platform. You can create a new database
          for your project in less than 30 seconds.
        </p>
      </div>

      <div
        class='mt-4 flex items-center justify-start gap-4 text-astro-gray-300'
      >
        <button
          type='button'
          id='fire-btn'
          class='flex w-fit rounded-full bg-[#222636]/80 px-3 py-1.5 tabular-nums hover:bg-[#222636]/50 aria-selected:bg-[#32384F] aria-selected:text-astro-gray-100'
        >
          🔥 1121
        </button>

        <button
          type='button'
          id='thumbs-up-btn'
          class='flex w-fit rounded-full bg-[#222636]/80 px-3 py-1.5 tabular-nums hover:bg-[#222636]/50 aria-selected:bg-[#32384F] aria-selected:text-astro-gray-100'
        >
          👍 459
        </button>

        <button
          type='button'
          id='thumbs-down-btn'
          class='flex w-fit rounded-full bg-[#222636]/80 px-3 py-1.5 tabular-nums hover:bg-[#222636]/50 aria-selected:bg-[#32384F] aria-selected:text-astro-gray-100'
        >
          👎 301
        </button>

        <button
          type='button'
          id='rocket-launch-btn'
          class='flex w-fit rounded-full bg-[#222636]/80 px-3 py-1.5 tabular-nums hover:bg-[#222636]/50 aria-selected:bg-[#32384F] aria-selected:text-astro-gray-100'
        >
          🚀 275
        </button>

        <button
          type='button'
          id='celebration-btn'
          class='flex w-fit rounded-full bg-[#222636]/80 px-3 py-1.5 tabular-nums hover:bg-[#222636]/50 aria-selected:bg-[#32384F] aria-selected:text-astro-gray-100'
        >
          🎉 137
        </button>
      </div>
    </div>
  </div>
  <Code slot='code' lang='ts' code={code.replaceAll("\t", "  ")} />
</UseCase>

<script>
  let fire = 1121
  let thumbsUp = 459
  let thumbsDown = 301
  let celebration = 137
  let rocketLaunch = 275

  const fireReactionButton = document.getElementById(
    "fire-btn"
  ) as unknown as HTMLButtonElement
  const thumbsUpReactionButton = document.getElementById(
    "thumbs-up-btn"
  ) as unknown as HTMLButtonElement
  const thumbsDownReactionButton = document.getElementById(
    "thumbs-down-btn"
  ) as unknown as HTMLButtonElement
  const celebrationReactionButton = document.getElementById(
    "celebration-btn"
  ) as unknown as HTMLButtonElement
  const rocketLaunchReactionButton = document.getElementById(
    "rocket-launch-btn"
  ) as unknown as HTMLButtonElement

  function toggleFire() {
    if (fireReactionButton.innerText === "🔥 1121") {
      fire++
      fireReactionButton.innerText = `🔥 ${fire}`
      fireReactionButton.setAttribute("aria-selected", "true")
    } else {
      fire--
      fireReactionButton.innerText = `🔥 ${fire}`
      fireReactionButton.removeAttribute("aria-selected")
    }
  }

  function toggleThumbsUp() {
    if (thumbsUpReactionButton.innerText === "👍 459") {
      thumbsUp++
      thumbsUpReactionButton.innerText = `👍 ${thumbsUp}`
      thumbsUpReactionButton.setAttribute("aria-selected", "true")
    } else {
      thumbsUp--
      thumbsUpReactionButton.innerText = `👍 ${thumbsUp}`
      thumbsUpReactionButton.removeAttribute("aria-selected")
    }
  }

  function toggleThumbsDown() {
    if (thumbsDownReactionButton.innerText === "👎 301") {
      thumbsDown++
      thumbsDownReactionButton.innerText = `👎 ${thumbsDown}`
      thumbsDownReactionButton.setAttribute("aria-selected", "true")
    } else {
      thumbsDown--
      thumbsDownReactionButton.innerText = `👎 ${thumbsDown}`
      thumbsDownReactionButton.removeAttribute("aria-selected")
    }
  }

  function toggleRocketLaunch() {
    if (rocketLaunchReactionButton.innerText === "🚀 275") {
      rocketLaunch++
      rocketLaunchReactionButton.innerText = `🚀 ${rocketLaunch}`
      rocketLaunchReactionButton.setAttribute("aria-selected", "true")
    } else {
      rocketLaunch--
      rocketLaunchReactionButton.innerText = `🚀 ${rocketLaunch}`
      rocketLaunchReactionButton.removeAttribute("aria-selected")
    }
  }

  function toggleCelebration() {
    if (celebrationReactionButton.innerText === "🎉 137") {
      celebration++
      celebrationReactionButton.innerText = `🚀 ${celebration}`
      celebrationReactionButton.setAttribute("aria-selected", "true")
    } else {
      celebration--
      celebrationReactionButton.innerText = `🚀 ${celebration}`
      celebrationReactionButton.removeAttribute("aria-selected")
    }
  }

  fireReactionButton.addEventListener("click", toggleFire)
  thumbsUpReactionButton.addEventListener("click", toggleThumbsUp)
  thumbsDownReactionButton.addEventListener("click", toggleThumbsDown)
  celebrationReactionButton.addEventListener("click", toggleCelebration)
  rocketLaunchReactionButton.addEventListener("click", toggleRocketLaunch)
</script>
